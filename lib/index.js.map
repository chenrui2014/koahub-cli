{"version":3,"sources":["../src/index.js"],"names":["run","fileCopySync","src","dest","mkdirsSync","dirname","writeFileSync","readFileSync","relative","process","cwd","getCliPath","binPath","mainModule","filename","indexOf","resolve","getBabelPath","getKoahubPath","getRuntimeFile","file","appName","runtimeName","replace","walk","dir","exist","existsSync","files","readdirSync","list","statSync","isDirectory","concat","push","mode","mkdirSync","compileByBabel","runtimeFile","checkFileExtensions","basename","content","babel","require","data","transform","presets","code","extensions","regExp","validate","key","RegExp","test","checkFilesChange","changedFiles","mTimeApp","mtime","getTime","mTimeRuntime","version","command","description","option","action","script","options","rootPath","app","appPath","appFile","runtime","runtimePath","cliPath","watch","startRuntimeProcess","runtimeProcess","fork","env","APP","on","signal","connected","exit","stopRuntimeProcess","kill","compile","err","time","Date","filePath","newTime","timeOut","setTimeout","length","clearTimeout","destFile","normalize","srcFile","project","exec","parse","argv","args","help","argvs","argvt","split"],"mappings":"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","file":"index.js","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport child_process from \"child_process\";\nimport shell from \"shelljs\";\nimport program from \"commander\";\nimport watch from \"./util/watch.util\";\nimport log, {debug} from \"./util/log.util\";\nimport config from \"./config/default.config\";\nimport packageFile from \"./../package.json\";\n\nfunction fileCopySync(src, dest) {\n    \n    mkdirsSync(path.dirname(dest));\n    fs.writeFileSync(dest, fs.readFileSync(src));\n    log(`[File] ${path.relative(process.cwd(), src)}`);\n}\n\nfunction getCliPath() {\n\n    let binPath;\n    if (process.mainModule.filename.indexOf('koahub-cli') != -1) {\n        binPath = path.resolve(process.mainModule.filename, '../../');\n    } else {\n        binPath = path.resolve(process.cwd(), 'node_modules/koahub-cli');\n    }\n\n    return binPath;\n}\n\nfunction getBabelPath() {\n    return path.resolve('node_modules/.bin/babel');\n}\n\nfunction getKoahubPath() {\n    return path.resolve('node_modules/.bin/koahub');\n}\n\nfunction getRuntimeFile(file, appName, runtimeName) {\n    return file.replace(`${appName}`, `${runtimeName}`);\n}\n\nfunction walk(dir) {\n\n    const exist = fs.existsSync(dir);\n    if (!exist) {\n        return;\n    }\n\n    const files = fs.readdirSync(dir);\n    let list = [];\n\n    for (let file of files) {\n        if (fs.statSync(path.resolve(dir, file)).isDirectory()) {\n            list = list.concat(walk(path.resolve(dir, file)));\n        } else {\n            list.push(path.resolve(dir, file));\n        }\n    }\n\n    return list;\n}\n\nfunction mkdirsSync(dirname, mode) {\n\n    if (fs.existsSync(dirname)) {\n        return true;\n    } else {\n        if (mkdirsSync(path.dirname(dirname), mode)) {\n            fs.mkdirSync(dirname, mode);\n            return true;\n        }\n    }\n}\n\nfunction compileByBabel(file, appName, runtimeName) {\n\n    let runtimeFile = getRuntimeFile(file, appName, runtimeName);\n    if (!checkFileExtensions(file)) {\n        if (path.basename(file) != '.DS_Store') {\n            fileCopySync(file, runtimeFile);\n        }\n        return;\n    }\n\n    mkdirsSync(path.dirname(runtimeFile));\n\n    let content = fs.readFileSync(file);\n    let babel = require('babel-core');\n    let data = babel.transform(content, {\n        filename: file,\n        presets: [\n            ['env', {\n                'targets': {\n                    \"node\": 'current'\n                }\n            }]\n        ]\n    });\n\n    fs.writeFileSync(`${runtimeFile}`, data.code);\n\n    log(`[Babel] ${path.relative(process.cwd(), file)}`);\n}\n\nfunction checkFileExtensions(file) {\n\n    const extensions = ['.js', '.jsx', '.es6', '.es'];\n    let regExp, validate = false;\n    for (let key in extensions) {\n        regExp = new RegExp(`${extensions[key]}$`);\n        if (regExp.test(file)) {\n            validate = true;\n        }\n    }\n    return validate;\n}\n\nfunction checkFilesChange(appName, runtimeName) {\n\n    let changedFiles = [];\n    let files = walk(appName);\n\n    for (let key in files) {\n        let mTimeApp = fs.statSync(files[key]).mtime.getTime();\n        let runtimeFile = getRuntimeFile(files[key], appName, runtimeName);\n\n        if (fs.existsSync(runtimeFile)) {\n            let mTimeRuntime = fs.statSync(runtimeFile).mtime.getTime();\n            if (mTimeRuntime < mTimeApp) {\n                changedFiles.push(files[key]);\n            }\n        } else {\n            changedFiles.push(files[key]);\n        }\n    }\n\n    return changedFiles;\n}\n\n\nprogram\n    .version(packageFile.version)\n\nprogram\n    .command('start [script]')\n    .description('koahub start script --watch --compile')\n    .option('-w, --watch', 'auto restart when a file is modified')\n    .option('-c, --compile', 'auto babel process when a file is modified')\n    .option('-r, --runtime [dir]', 'Babel compile and start the dir')\n    .action(function (script, options) {\n\n        const rootPath = process.cwd();\n        const appName = path.dirname(script) || config.app;\n        const appPath = path.resolve(rootPath, appName);\n        const appFile = path.resolve(rootPath, script);\n        const runtimeName = options.runtime || config.runtime;\n        const runtimePath = path.resolve(rootPath, runtimeName);\n        const runtimeFile = path.resolve(rootPath, getRuntimeFile(script, appName, runtimeName));\n\n        const cliPath = getCliPath();\n\n        // 监控启动\n        if (options.watch) {\n\n            // 编译并且监控启动\n            if (options.compile) {\n                const changedFiles = checkFilesChange(appName, runtimeName);\n                for (let key in changedFiles) {\n                    compileByBabel(changedFiles[key], appName, runtimeName);\n                }\n            }\n\n            let runtimeProcess;\n\n            function startRuntimeProcess(runtimeFile) {\n                runtimeProcess = child_process.fork(runtimeFile, [], {env: {APP: runtimeName}});\n                runtimeProcess.on('exit', function (code, signal) {\n                    if (runtimeProcess.connected == false) {\n                        process.exit();\n                    }\n                });\n            }\n\n            function stopRuntimeProcess() {\n                if (runtimeProcess) runtimeProcess.kill();\n            }\n\n            // 启动运行时进程\n            startRuntimeProcess(runtimeFile);\n\n            // 捕获SIGTERM退出信号\n            process.on('SIGTERM', function () {\n                stopRuntimeProcess();\n                process.exit();\n            });\n\n            // 捕获未知错误\n            process.on('uncaughtException', function (err) {\n                debug(err);\n            });\n\n            let time = new Date();\n            let files = [];\n            // 开启文件监控\n            watch(appName, runtimeName, function (filePath, compile = true) {\n\n                if (options.compile == true && compile == true) {\n                    files.push(filePath);\n                }\n\n                let newTime = new Date();\n                let timeOut = setTimeout(function () {\n                    if (files.length) {\n                        for (let key in files) {\n                            compileByBabel(files[key], appName, runtimeName);\n                        }\n                        // 未编译文件清空\n                        files = [];\n                    }\n                    // 进程退出\n                    stopRuntimeProcess();\n                    // 进程启动\n                    startRuntimeProcess(runtimeFile);\n                }, 100);\n\n                if (newTime - time <= 100) {\n                    clearTimeout(timeOut);\n                }\n\n                time = newTime;\n            });\n\n            return;\n        }\n\n        // 直接编译启动\n        if (options.compile) {\n            const changedFiles = checkFilesChange(appName, runtimeName);\n            for (let key in changedFiles) {\n                compileByBabel(changedFiles[key], appName, runtimeName);\n            }\n        }\n\n        // 直接启动, 无法require启动\n        child_process.fork(runtimeFile, [], {env: {APP: runtimeName}});\n    });\n\nprogram\n    .command('controller [file]')\n    .description('koahub create controller')\n    .action(function (file) {\n\n        const destFile = path.normalize(`${file}.controller.js`);\n        const srcFile = path.resolve(getCliPath(), 'template/controller/index.controller.js');\n\n        fileCopySync(srcFile, destFile);\n    });\n\nprogram\n    .command('create [project]')\n    .description('koahub create project')\n    .action(function (project) {\n\n        shell.exec(`git clone https://github.com/koahubjs/koahub-demo.git ${project}`);\n    });\n\n// mainMoule路径中含有koahub-cli为命令行启动\nif (process.mainModule.filename.indexOf('koahub-cli') != -1) {\n    program.parse(process.argv);\n    if (!program.args.length) program.help();\n}\n\n// 支持导入koahub-cli启动\nexport function run(argv) {\n\n    if (!argv) {\n        program.help();\n        return;\n    }\n\n    let argvs = [];\n    argvs.push(process.argv[0]);\n    argvs.push(getKoahubPath());\n\n    if (argv.indexOf(' ') != -1) {\n        const argvt = argv.split(' ');\n        for (let key in argvt) {\n            argvs.push(argvt[key]);\n        }\n    } else {\n        argvs.push(argv);\n    }\n\n    program.parse(argvs);\n}\n"]}